{"version":3,"sources":["webpack:///webpack/bootstrap 33381aa6ad2caff0e931","webpack:///./web_modules/glfx/index.js","webpack:///./src/samples/scrolltext.ts","webpack:///./src/locate-print/index.ts","webpack:///./src/locate-print/shaders/colorshift.ts","webpack:///./src/locate-print/shaders/scanlines.ts"],"names":[],"mappings":"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","file":"scrolltext.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/samples\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33381aa6ad2caff0e931","/*\n * glfx.js\n * http://evanw.github.com/glfx.js/\n *\n * Copyright 2011 Evan Wallace\n * Released under the MIT license\n */\nvar fx = function () {\n  function q(a, d, c) { return Math.max(a, Math.min(d, c)) } function w(b) { return { _: b, loadContentsOf: function (b) { a = this._.gl; this._.loadContentsOf(b) }, destroy: function () { a = this._.gl; this._.destroy() } } } function A(a) { return w(r.fromElement(a)) } function B(b, d) {\n    var c = a.UNSIGNED_BYTE; if (a.getExtension(\"OES_texture_float\") && a.getExtension(\"OES_texture_float_linear\")) { var e = new r(100, 100, a.RGBA, a.FLOAT); try { e.drawTo(function () { c = a.FLOAT }) } catch (g) { } e.destroy() } this._.texture && this._.texture.destroy();\n    this._.spareTexture && this._.spareTexture.destroy(); this.width = b; this.height = d; this._.texture = new r(b, d, a.RGBA, c); this._.spareTexture = new r(b, d, a.RGBA, c); this._.extraTexture = this._.extraTexture || new r(0, 0, a.RGBA, c); this._.flippedShader = this._.flippedShader || new h(null, \"uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,vec2(texCoord.x,1.0-texCoord.y));}\"); this._.isInitialized = !0\n  } function C(a, d, c) {\n    this._.isInitialized &&\n      a._.width == this.width && a._.height == this.height || B.call(this, d ? d : a._.width, c ? c : a._.height); a._.use(); this._.texture.drawTo(function () { h.getDefaultShader().drawRect() }); return this\n  } function D() { this._.texture.use(); this._.flippedShader.drawRect(); return this } function f(a, d, c, e) { (c || this._.texture).use(); this._.spareTexture.drawTo(function () { a.uniforms(d).drawRect() }); this._.spareTexture.swapWith(e || this._.texture) } function E(a) { a.parentNode.insertBefore(this, a); a.parentNode.removeChild(a); return this }\n  function F() { var b = new r(this._.texture.width, this._.texture.height, a.RGBA, a.UNSIGNED_BYTE); this._.texture.use(); b.drawTo(function () { h.getDefaultShader().drawRect() }); return w(b) } function G() { var b = this._.texture.width, d = this._.texture.height, c = new Uint8Array(4 * b * d); this._.texture.drawTo(function () { a.readPixels(0, 0, b, d, a.RGBA, a.UNSIGNED_BYTE, c) }); return c } function k(b) { return function () { a = this._.gl; return b.apply(this, arguments) } } function x(a, d, c, e, g, l, n, p) {\n    var m = c - g, h = e - l, f = n - g, k = p - l; g = a - c + g - n; l =\n      d - e + l - p; var q = m * k - f * h, f = (g * k - f * l) / q, m = (m * l - g * h) / q; return [c - a + f * c, e - d + f * e, f, n - a + m * n, p - d + m * p, m, a, d, 1]\n  } function y(a) { var d = a[0], c = a[1], e = a[2], g = a[3], l = a[4], n = a[5], p = a[6], m = a[7]; a = a[8]; var f = d * l * a - d * n * m - c * g * a + c * n * p + e * g * m - e * l * p; return [(l * a - n * m) / f, (e * m - c * a) / f, (c * n - e * l) / f, (n * p - g * a) / f, (d * a - e * p) / f, (e * g - d * n) / f, (g * m - l * p) / f, (c * p - d * m) / f, (d * l - c * g) / f] } function z(a) {\n    var d = a.length; this.xa = []; this.ya = []; this.u = []; this.y2 = []; a.sort(function (a, b) { return a[0] - b[0] }); for (var c = 0; c < d; c++)this.xa.push(a[c][0]), this.ya.push(a[c][1]);\n    this.u[0] = 0; this.y2[0] = 0; for (c = 1; c < d - 1; ++c) { a = this.xa[c + 1] - this.xa[c - 1]; var e = (this.xa[c] - this.xa[c - 1]) / a, g = e * this.y2[c - 1] + 2; this.y2[c] = (e - 1) / g; this.u[c] = (6 * ((this.ya[c + 1] - this.ya[c]) / (this.xa[c + 1] - this.xa[c]) - (this.ya[c] - this.ya[c - 1]) / (this.xa[c] - this.xa[c - 1])) / a - e * this.u[c - 1]) / g } this.y2[d - 1] = 0; for (c = d - 2; 0 <= c; --c)this.y2[c] = this.y2[c] * this.y2[c + 1] + this.u[c]\n  } function u(a, d) {\n    return new h(null, a + \"uniform sampler2D texture;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 coord=texCoord*texSize;\" +\n      d + \"gl_FragColor=texture2D(texture,coord/texSize);vec2 clampedCoord=clamp(coord,vec2(0.0),texSize);if(coord!=clampedCoord){gl_FragColor.a*=max(0.0,1.0-length(coord-clampedCoord));}}\")\n  } function H(b, d) {\n    a.brightnessContrast = a.brightnessContrast || new h(null, \"uniform sampler2D texture;uniform float brightness;uniform float contrast;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.rgb+=brightness;if(contrast>0.0){color.rgb=(color.rgb-0.5)/(1.0-contrast)+0.5;}else{color.rgb=(color.rgb-0.5)*(1.0+contrast)+0.5;}gl_FragColor=color;}\");\n    f.call(this, a.brightnessContrast, { brightness: q(-1, b, 1), contrast: q(-1, d, 1) }); return this\n  } function t(a) { a = new z(a); for (var d = [], c = 0; 256 > c; c++)d.push(q(0, Math.floor(256 * a.interpolate(c / 255)), 255)); return d } function I(b, d, c) {\n    b = t(b); 1 == arguments.length ? d = c = b : (d = t(d), c = t(c)); for (var e = [], g = 0; 256 > g; g++)e.splice(e.length, 0, b[g], d[g], c[g], 255); this._.extraTexture.initFromBytes(256, 1, e); this._.extraTexture.use(1); a.curves = a.curves || new h(null, \"uniform sampler2D texture;uniform sampler2D map;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color.r=texture2D(map,vec2(color.r)).r;color.g=texture2D(map,vec2(color.g)).g;color.b=texture2D(map,vec2(color.b)).b;gl_FragColor=color;}\");\n    a.curves.textures({ map: 1 }); f.call(this, a.curves, {}); return this\n  } function J(b) {\n    a.denoise = a.denoise || new h(null, \"uniform sampler2D texture;uniform float exponent;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec4 center=texture2D(texture,texCoord);vec4 color=vec4(0.0);float total=0.0;for(float x=-4.0;x<=4.0;x+=1.0){for(float y=-4.0;y<=4.0;y+=1.0){vec4 sample=texture2D(texture,texCoord+vec2(x,y)/texSize);float weight=1.0-abs(dot(sample.rgb-center.rgb,vec3(0.25)));weight=pow(weight,exponent);color+=sample*weight;total+=weight;}}gl_FragColor=color/total;}\");\n    for (var d = 0; 2 > d; d++)f.call(this, a.denoise, { exponent: Math.max(0, b), texSize: [this.width, this.height] }); return this\n  } function K(b, d) {\n    a.hueSaturation = a.hueSaturation || new h(null, \"uniform sampler2D texture;uniform float hue;uniform float saturation;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float angle=hue*3.14159265;float s=sin(angle),c=cos(angle);vec3 weights=(vec3(2.0*c,-sqrt(3.0)*s-c,sqrt(3.0)*s-c)+1.0)/3.0;float len=length(color.rgb);color.rgb=vec3(dot(color.rgb,weights.xyz),dot(color.rgb,weights.zxy),dot(color.rgb,weights.yzx));float average=(color.r+color.g+color.b)/3.0;if(saturation>0.0){color.rgb+=(average-color.rgb)*(1.0-1.0/(1.001-saturation));}else{color.rgb+=(average-color.rgb)*(-saturation);}gl_FragColor=color;}\");\n    f.call(this, a.hueSaturation, { hue: q(-1, b, 1), saturation: q(-1, d, 1) }); return this\n  } function L(b) {\n    a.noise = a.noise || new h(null, \"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;float rand(vec2 co){return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);}void main(){vec4 color=texture2D(texture,texCoord);float diff=(rand(texCoord)-0.5)*amount;color.r+=diff;color.g+=diff;color.b+=diff;gl_FragColor=color;}\");\n    f.call(this, a.noise, { amount: q(0, b, 1) }); return this\n  } function M(b) {\n    a.sepia = a.sepia || new h(null, \"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float r=color.r;float g=color.g;float b=color.b;color.r=min(1.0,(r*(1.0-(0.607*amount)))+(g*(0.769*amount))+(b*(0.189*amount)));color.g=min(1.0,(r*0.349*amount)+(g*(1.0-(0.314*amount)))+(b*0.168*amount));color.b=min(1.0,(r*0.272*amount)+(g*0.534*amount)+(b*(1.0-(0.869*amount))));gl_FragColor=color;}\");\n    f.call(this, a.sepia, { amount: q(0, b, 1) }); return this\n  } function N(b, d) {\n    a.unsharpMask = a.unsharpMask || new h(null, \"uniform sampler2D blurredTexture;uniform sampler2D originalTexture;uniform float strength;uniform float threshold;varying vec2 texCoord;void main(){vec4 blurred=texture2D(blurredTexture,texCoord);vec4 original=texture2D(originalTexture,texCoord);gl_FragColor=mix(blurred,original,1.0+strength);}\");\n    this._.extraTexture.ensureFormat(this._.texture); this._.texture.use(); this._.extraTexture.drawTo(function () { h.getDefaultShader().drawRect() }); this._.extraTexture.use(1); this.triangleBlur(b); a.unsharpMask.textures({ originalTexture: 1 }); f.call(this, a.unsharpMask, { strength: d }); this._.extraTexture.unuse(1); return this\n  } function O(b) {\n    a.vibrance = a.vibrance || new h(null, \"uniform sampler2D texture;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;float mx=max(color.r,max(color.g,color.b));float amt=(mx-average)*(-amount*3.0);color.rgb=mix(color.rgb,vec3(mx),amt);gl_FragColor=color;}\");\n    f.call(this, a.vibrance, { amount: q(-1, b, 1) }); return this\n  } function P(b, d) {\n    a.vignette = a.vignette || new h(null, \"uniform sampler2D texture;uniform float size;uniform float amount;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);float dist=distance(texCoord,vec2(0.5,0.5));color.rgb*=smoothstep(0.8,size*0.799,dist*(amount+size));gl_FragColor=color;}\");\n    f.call(this, a.vignette, { size: q(0, b, 1), amount: q(0, d, 1) }); return this\n  } function Q(b, d, c) {\n    a.lensBlurPrePass = a.lensBlurPrePass || new h(null, \"uniform sampler2D texture;uniform float power;varying vec2 texCoord;void main(){vec4 color=texture2D(texture,texCoord);color=pow(color,vec4(power));gl_FragColor=vec4(color);}\"); var e = \"uniform sampler2D texture0;uniform sampler2D texture1;uniform vec2 delta0;uniform vec2 delta1;uniform float power;varying vec2 texCoord;\" +\n      s + \"vec4 sample(vec2 delta){float offset=random(vec3(delta,151.7182),0.0);vec4 color=vec4(0.0);float total=0.0;for(float t=0.0;t<=30.0;t++){float percent=(t+offset)/30.0;color+=texture2D(texture0,texCoord+delta*percent);total+=1.0;}return color/total;}\";\n    a.lensBlur0 = a.lensBlur0 || new h(null, e + \"void main(){gl_FragColor=sample(delta0);}\"); a.lensBlur1 = a.lensBlur1 || new h(null, e + \"void main(){gl_FragColor=(sample(delta0)+sample(delta1))*0.5;}\"); a.lensBlur2 = a.lensBlur2 || (new h(null, e + \"void main(){vec4 color=(sample(delta0)+2.0*texture2D(texture1,texCoord))/3.0;gl_FragColor=pow(color,vec4(power));}\")).textures({ texture1: 1 }); for (var e =\n      [], g = 0; 3 > g; g++) { var l = c + 2 * g * Math.PI / 3; e.push([b * Math.sin(l) / this.width, b * Math.cos(l) / this.height]) } b = Math.pow(10, q(-1, d, 1)); f.call(this, a.lensBlurPrePass, { power: b }); this._.extraTexture.ensureFormat(this._.texture); f.call(this, a.lensBlur0, { delta0: e[0] }, this._.texture, this._.extraTexture); f.call(this, a.lensBlur1, { delta0: e[1], delta1: e[2] }, this._.extraTexture, this._.extraTexture); f.call(this, a.lensBlur0, { delta0: e[1] }); this._.extraTexture.use(1); f.call(this, a.lensBlur2, { power: 1 / b, delta0: e[2] }); return this\n  }\n  function R(b, d, c, e, g, l) {\n    a.tiltShift = a.tiltShift || new h(null, \"uniform sampler2D texture;uniform float blurRadius;uniform float gradientRadius;uniform vec2 start;uniform vec2 end;uniform vec2 delta;uniform vec2 texSize;varying vec2 texCoord;\" + s + \"void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);vec2 normal=normalize(vec2(start.y-end.y,end.x-start.x));float radius=smoothstep(0.0,1.0,abs(dot(texCoord*texSize-start,normal))/gradientRadius)*blurRadius;for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta/texSize*percent*radius);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}\");\n    var n = c - b, p = e - d, m = Math.sqrt(n * n + p * p); f.call(this, a.tiltShift, { blurRadius: g, gradientRadius: l, start: [b, d], end: [c, e], delta: [n / m, p / m], texSize: [this.width, this.height] }); f.call(this, a.tiltShift, { blurRadius: g, gradientRadius: l, start: [b, d], end: [c, e], delta: [-p / m, n / m], texSize: [this.width, this.height] }); return this\n  } function S(b) {\n    a.triangleBlur = a.triangleBlur || new h(null, \"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;\" + s + \"void main(){vec4 color=vec4(0.0);float total=0.0;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec4 sample=texture2D(texture,texCoord+delta*percent);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}\");\n    f.call(this, a.triangleBlur, { delta: [b / this.width, 0] }); f.call(this, a.triangleBlur, { delta: [0, b / this.height] }); return this\n  } function T(b, d, c) {\n    a.zoomBlur = a.zoomBlur || new h(null, \"uniform sampler2D texture;uniform vec2 center;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;\" + s + \"void main(){vec4 color=vec4(0.0);float total=0.0;vec2 toCenter=center-texCoord*texSize;float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=0.0;t<=40.0;t++){float percent=(t+offset)/40.0;float weight=4.0*(percent-percent*percent);vec4 sample=texture2D(texture,texCoord+toCenter*percent*strength/texSize);sample.rgb*=sample.a;color+=sample*weight;total+=weight;}gl_FragColor=color/total;gl_FragColor.rgb/=gl_FragColor.a+0.00001;}\");\n    f.call(this, a.zoomBlur, { center: [b, d], strength: c, texSize: [this.width, this.height] }); return this\n  } function U(b, d, c, e) {\n    a.colorHalftone = a.colorHalftone || new h(null, \"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(float angle){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);vec3 cmy=1.0-color.rgb;float k=min(cmy.x,min(cmy.y,cmy.z));cmy=(cmy-k)/(1.0-k);cmy=clamp(cmy*10.0-3.0+vec3(pattern(angle+0.26179),pattern(angle+1.30899),pattern(angle)),0.0,1.0);k=clamp(k*10.0-5.0+pattern(angle+0.78539),0.0,1.0);gl_FragColor=vec4(1.0-cmy-k,color.a);}\");\n    f.call(this, a.colorHalftone, { center: [b, d], angle: c, scale: Math.PI / e, texSize: [this.width, this.height] }); return this\n  } function V(b, d, c, e) {\n    a.dotScreen = a.dotScreen || new h(null, \"uniform sampler2D texture;uniform vec2 center;uniform float angle;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;float pattern(){float s=sin(angle),c=cos(angle);vec2 tex=texCoord*texSize-center;vec2 point=vec2(c*tex.x-s*tex.y,s*tex.x+c*tex.y)*scale;return(sin(point.x)*sin(point.y))*4.0;}void main(){vec4 color=texture2D(texture,texCoord);float average=(color.r+color.g+color.b)/3.0;gl_FragColor=vec4(vec3(average*10.0-5.0+pattern()),color.a);}\");\n    f.call(this, a.dotScreen, { center: [b, d], angle: c, scale: Math.PI / e, texSize: [this.width, this.height] }); return this\n  } function W(b) {\n    a.edgeWork1 = a.edgeWork1 || new h(null, \"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;\" + s + \"void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec3 sample=texture2D(texture,texCoord+delta*percent).rgb;float average=(sample.r+sample.g+sample.b)/3.0;color.x+=average*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=average*weight;total.y+=weight;}}gl_FragColor=vec4(color/total,0.0,1.0);}\");\n    a.edgeWork2 = a.edgeWork2 || new h(null, \"uniform sampler2D texture;uniform vec2 delta;varying vec2 texCoord;\" + s + \"void main(){vec2 color=vec2(0.0);vec2 total=vec2(0.0);float offset=random(vec3(12.9898,78.233,151.7182),0.0);for(float t=-30.0;t<=30.0;t++){float percent=(t+offset-0.5)/30.0;float weight=1.0-abs(percent);vec2 sample=texture2D(texture,texCoord+delta*percent).xy;color.x+=sample.x*weight;total.x+=weight;if(abs(t)<15.0){weight=weight*2.0-1.0;color.y+=sample.y*weight;total.y+=weight;}}float c=clamp(10000.0*(color.y/total.y-color.x/total.x)+0.5,0.0,1.0);gl_FragColor=vec4(c,c,c,1.0);}\");\n    f.call(this, a.edgeWork1, { delta: [b / this.width, 0] }); f.call(this, a.edgeWork2, { delta: [0, b / this.height] }); return this\n  } function X(b, d, c) {\n    a.hexagonalPixelate = a.hexagonalPixelate || new h(null, \"uniform sampler2D texture;uniform vec2 center;uniform float scale;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 tex=(texCoord*texSize-center)/scale;tex.y/=0.866025404;tex.x-=tex.y*0.5;vec2 a;if(tex.x+tex.y-floor(tex.x)-floor(tex.y)<1.0)a=vec2(floor(tex.x),floor(tex.y));else a=vec2(ceil(tex.x),ceil(tex.y));vec2 b=vec2(ceil(tex.x),floor(tex.y));vec2 c=vec2(floor(tex.x),ceil(tex.y));vec3 TEX=vec3(tex.x,tex.y,1.0-tex.x-tex.y);vec3 A=vec3(a.x,a.y,1.0-a.x-a.y);vec3 B=vec3(b.x,b.y,1.0-b.x-b.y);vec3 C=vec3(c.x,c.y,1.0-c.x-c.y);float alen=length(TEX-A);float blen=length(TEX-B);float clen=length(TEX-C);vec2 choice;if(alen<blen){if(alen<clen)choice=a;else choice=c;}else{if(blen<clen)choice=b;else choice=c;}choice.x+=choice.y*0.5;choice.y*=0.866025404;choice*=scale/texSize;gl_FragColor=texture2D(texture,choice+center/texSize);}\");\n    f.call(this, a.hexagonalPixelate, { center: [b, d], scale: c, texSize: [this.width, this.height] }); return this\n  } function Y(b) {\n    a.ink = a.ink || new h(null, \"uniform sampler2D texture;uniform float strength;uniform vec2 texSize;varying vec2 texCoord;void main(){vec2 dx=vec2(1.0/texSize.x,0.0);vec2 dy=vec2(0.0,1.0/texSize.y);vec4 color=texture2D(texture,texCoord);float bigTotal=0.0;float smallTotal=0.0;vec3 bigAverage=vec3(0.0);vec3 smallAverage=vec3(0.0);for(float x=-2.0;x<=2.0;x+=1.0){for(float y=-2.0;y<=2.0;y+=1.0){vec3 sample=texture2D(texture,texCoord+dx*x+dy*y).rgb;bigAverage+=sample;bigTotal+=1.0;if(abs(x)+abs(y)<2.0){smallAverage+=sample;smallTotal+=1.0;}}}vec3 edge=max(vec3(0.0),bigAverage/bigTotal-smallAverage/smallTotal);gl_FragColor=vec4(color.rgb-dot(edge,edge)*strength*100000.0,color.a);}\");\n    f.call(this, a.ink, { strength: b * b * b * b * b, texSize: [this.width, this.height] }); return this\n  } function Z(b, d, c, e) {\n    a.bulgePinch = a.bulgePinch || u(\"uniform float radius;uniform float strength;uniform vec2 center;\", \"coord-=center;float distance=length(coord);if(distance<radius){float percent=distance/radius;if(strength>0.0){coord*=mix(1.0,smoothstep(0.0,radius/distance,percent),strength*0.75);}else{coord*=mix(1.0,pow(percent,1.0+strength*0.75)*radius/distance,1.0-percent);}}coord+=center;\");\n    f.call(this, a.bulgePinch, { radius: c, strength: q(-1, e, 1), center: [b, d], texSize: [this.width, this.height] }); return this\n  } function $(b, d, c) {\n    a.matrixWarp = a.matrixWarp || u(\"uniform mat3 matrix;uniform bool useTextureSpace;\", \"if(useTextureSpace)coord=coord/texSize*2.0-1.0;vec3 warp=matrix*vec3(coord,1.0);coord=warp.xy/warp.z;if(useTextureSpace)coord=(coord*0.5+0.5)*texSize;\"); b = Array.prototype.concat.apply([], b); if (4 == b.length) b =\n      [b[0], b[1], 0, b[2], b[3], 0, 0, 0, 1]; else if (9 != b.length) throw \"can only warp with 2x2 or 3x3 matrix\"; f.call(this, a.matrixWarp, { matrix: d ? y(b) : b, texSize: [this.width, this.height], useTextureSpace: c | 0 }); return this\n  } function aa(a, d) {\n    var c = x.apply(null, d), e = x.apply(null, a), c = y(c); return this.matrixWarp([c[0] * e[0] + c[1] * e[3] + c[2] * e[6], c[0] * e[1] + c[1] * e[4] + c[2] * e[7], c[0] * e[2] + c[1] * e[5] + c[2] * e[8], c[3] * e[0] + c[4] * e[3] + c[5] * e[6], c[3] * e[1] + c[4] * e[4] + c[5] * e[7], c[3] * e[2] + c[4] * e[5] + c[5] * e[8], c[6] * e[0] + c[7] * e[3] + c[8] * e[6],\n    c[6] * e[1] + c[7] * e[4] + c[8] * e[7], c[6] * e[2] + c[7] * e[5] + c[8] * e[8]])\n  } function ba(b, d, c, e) {\n    a.swirl = a.swirl || u(\"uniform float radius;uniform float angle;uniform vec2 center;\", \"coord-=center;float distance=length(coord);if(distance<radius){float percent=(radius-distance)/radius;float theta=percent*percent*angle;float s=sin(theta);float c=cos(theta);coord=vec2(coord.x*c-coord.y*s,coord.x*s+coord.y*c);}coord+=center;\");\n    f.call(this, a.swirl, { radius: c, center: [b, d], angle: e, texSize: [this.width, this.height] }); return this\n  } var v = {}; (function () {\n    function a(b) {\n      if (!b.getExtension(\"OES_texture_float\")) return !1; var c = b.createFramebuffer(), e = b.createTexture(); b.bindTexture(b.TEXTURE_2D, e); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MAG_FILTER, b.NEAREST); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MIN_FILTER, b.NEAREST); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_S, b.CLAMP_TO_EDGE); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_T, b.CLAMP_TO_EDGE);\n      b.texImage2D(b.TEXTURE_2D, 0, b.RGBA, 1, 1, 0, b.RGBA, b.UNSIGNED_BYTE, null); b.bindFramebuffer(b.FRAMEBUFFER, c); b.framebufferTexture2D(b.FRAMEBUFFER, b.COLOR_ATTACHMENT0, b.TEXTURE_2D, e, 0); c = b.createTexture(); b.bindTexture(b.TEXTURE_2D, c); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MAG_FILTER, b.LINEAR); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_MIN_FILTER, b.LINEAR); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_S, b.CLAMP_TO_EDGE); b.texParameteri(b.TEXTURE_2D, b.TEXTURE_WRAP_T, b.CLAMP_TO_EDGE); b.texImage2D(b.TEXTURE_2D,\n        0, b.RGBA, 2, 2, 0, b.RGBA, b.FLOAT, new Float32Array([2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])); var e = b.createProgram(), d = b.createShader(b.VERTEX_SHADER), g = b.createShader(b.FRAGMENT_SHADER); b.shaderSource(d, \"attribute vec2 vertex;void main(){gl_Position=vec4(vertex,0.0,1.0);}\"); b.shaderSource(g, \"uniform sampler2D texture;void main(){gl_FragColor=texture2D(texture,vec2(0.5));}\"); b.compileShader(d); b.compileShader(g); b.attachShader(e, d); b.attachShader(e,\n          g); b.linkProgram(e); d = b.createBuffer(); b.bindBuffer(b.ARRAY_BUFFER, d); b.bufferData(b.ARRAY_BUFFER, new Float32Array([0, 0]), b.STREAM_DRAW); b.enableVertexAttribArray(0); b.vertexAttribPointer(0, 2, b.FLOAT, !1, 0, 0); d = new Uint8Array(4); b.useProgram(e); b.viewport(0, 0, 1, 1); b.bindTexture(b.TEXTURE_2D, c); b.drawArrays(b.POINTS, 0, 1); b.readPixels(0, 0, 1, 1, b.RGBA, b.UNSIGNED_BYTE, d); return 127 === d[0] || 128 === d[0]\n    } function d() { } function c(a) {\n      \"OES_texture_float_linear\" === a ? (void 0 === this.$OES_texture_float_linear$ && Object.defineProperty(this,\n        \"$OES_texture_float_linear$\", { enumerable: !1, configurable: !1, writable: !1, value: new d }), a = this.$OES_texture_float_linear$) : a = n.call(this, a); return a\n    } function e() { var a = f.call(this); -1 === a.indexOf(\"OES_texture_float_linear\") && a.push(\"OES_texture_float_linear\"); return a } try { var g = document.createElement(\"canvas\").getContext(\"experimental-webgl\") } catch (l) { } if (g && -1 === g.getSupportedExtensions().indexOf(\"OES_texture_float_linear\") && a(g)) {\n      var n = WebGLRenderingContext.prototype.getExtension, f = WebGLRenderingContext.prototype.getSupportedExtensions;\n      WebGLRenderingContext.prototype.getExtension = c; WebGLRenderingContext.prototype.getSupportedExtensions = e\n    }\n  })(); var a; v.canvas = function () {\n    var b = document.createElement(\"canvas\"); try { a = b.getContext(\"experimental-webgl\", { premultipliedAlpha: !1 }) } catch (d) { a = null } if (!a) throw \"This browser does not support WebGL\"; b._ = { gl: a, isInitialized: !1, texture: null, spareTexture: null, flippedShader: null }; b.texture = k(A); b.draw = k(C); b.update = k(D); b.replace = k(E); b.contents = k(F); b.getPixelArray = k(G); b.brightnessContrast = k(H);\n    b.hexagonalPixelate = k(X); b.hueSaturation = k(K); b.colorHalftone = k(U); b.triangleBlur = k(S); b.unsharpMask = k(N); b.perspective = k(aa); b.matrixWarp = k($); b.bulgePinch = k(Z); b.tiltShift = k(R); b.dotScreen = k(V); b.edgeWork = k(W); b.lensBlur = k(Q); b.zoomBlur = k(T); b.noise = k(L); b.denoise = k(J); b.curves = k(I); b.swirl = k(ba); b.ink = k(Y); b.vignette = k(P); b.vibrance = k(O); b.sepia = k(M); return b\n  }; v.splineInterpolate = t; var h = function () {\n    function b(b, c) {\n      var e = a.createShader(b); a.shaderSource(e, c); a.compileShader(e); if (!a.getShaderParameter(e,\n        a.COMPILE_STATUS)) throw \"compile error: \" + a.getShaderInfoLog(e); return e\n    } function d(d, l) { this.texCoordAttribute = this.vertexAttribute = null; this.program = a.createProgram(); d = d || c; l = l || e; l = \"precision highp float;\" + l; a.attachShader(this.program, b(a.VERTEX_SHADER, d)); a.attachShader(this.program, b(a.FRAGMENT_SHADER, l)); a.linkProgram(this.program); if (!a.getProgramParameter(this.program, a.LINK_STATUS)) throw \"link error: \" + a.getProgramInfoLog(this.program); } var c = \"attribute vec2 vertex;attribute vec2 _texCoord;varying vec2 texCoord;void main(){texCoord=_texCoord;gl_Position=vec4(vertex*2.0-1.0,0.0,1.0);}\",\n      e = \"uniform sampler2D texture;varying vec2 texCoord;void main(){gl_FragColor=texture2D(texture,texCoord);}\"; d.prototype.destroy = function () { a.deleteProgram(this.program); this.program = null }; d.prototype.uniforms = function (b) {\n        a.useProgram(this.program); for (var e in b) if (b.hasOwnProperty(e)) {\n          var c = a.getUniformLocation(this.program, e); if (null !== c) {\n            var d = b[e]; if (\"[object Array]\" == Object.prototype.toString.call(d)) switch (d.length) {\n              case 1: a.uniform1fv(c, new Float32Array(d)); break;\n              case 2: a.uniform2fv(c, new Float32Array(d)); break; case 3: a.uniform3fv(c, new Float32Array(d)); break; case 4: a.uniform4fv(c, new Float32Array(d)); break; case 9: a.uniformMatrix3fv(c, !1, new Float32Array(d)); break; case 16: a.uniformMatrix4fv(c, !1, new Float32Array(d)); break; default: throw \"dont't know how to load uniform \\\"\" + e + '\" of length ' + d.length;\n            } else if (\"[object Number]\" == Object.prototype.toString.call(d)) a.uniform1f(c, d); else throw 'attempted to set uniform \"' + e + '\" to invalid value ' + (d || \"undefined\").toString();\n          }\n        } return this\n      }; d.prototype.textures = function (b) { a.useProgram(this.program); for (var c in b) b.hasOwnProperty(c) && a.uniform1i(a.getUniformLocation(this.program, c), b[c]); return this }; d.prototype.drawRect = function (b, c, e, d) {\n        var f = a.getParameter(a.VIEWPORT); c = void 0 !== c ? (c - f[1]) / f[3] : 0; b = void 0 !== b ? (b - f[0]) / f[2] : 0; e = void 0 !== e ? (e - f[0]) / f[2] : 1; d = void 0 !== d ? (d - f[1]) / f[3] : 1; null == a.vertexBuffer && (a.vertexBuffer = a.createBuffer()); a.bindBuffer(a.ARRAY_BUFFER, a.vertexBuffer); a.bufferData(a.ARRAY_BUFFER, new Float32Array([b,\n          c, b, d, e, c, e, d]), a.STATIC_DRAW); null == a.texCoordBuffer && (a.texCoordBuffer = a.createBuffer(), a.bindBuffer(a.ARRAY_BUFFER, a.texCoordBuffer), a.bufferData(a.ARRAY_BUFFER, new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), a.STATIC_DRAW)); null == this.vertexAttribute && (this.vertexAttribute = a.getAttribLocation(this.program, \"vertex\"), a.enableVertexAttribArray(this.vertexAttribute)); null == this.texCoordAttribute && (this.texCoordAttribute = a.getAttribLocation(this.program, \"_texCoord\"), a.enableVertexAttribArray(this.texCoordAttribute));\n        a.useProgram(this.program); a.bindBuffer(a.ARRAY_BUFFER, a.vertexBuffer); a.vertexAttribPointer(this.vertexAttribute, 2, a.FLOAT, !1, 0, 0); a.bindBuffer(a.ARRAY_BUFFER, a.texCoordBuffer); a.vertexAttribPointer(this.texCoordAttribute, 2, a.FLOAT, !1, 0, 0); a.drawArrays(a.TRIANGLE_STRIP, 0, 4)\n      }; d.getDefaultShader = function () { a.defaultShader = a.defaultShader || new d; return a.defaultShader }; return d\n  }(); z.prototype.interpolate = function (a) {\n    for (var d = 0, c = this.ya.length - 1; 1 < c - d;) { var e = c + d >> 1; this.xa[e] > a ? c = e : d = e } var e = this.xa[c] -\n      this.xa[d], g = (this.xa[c] - a) / e; a = (a - this.xa[d]) / e; return g * this.ya[d] + a * this.ya[c] + ((g * g * g - g) * this.y2[d] + (a * a * a - a) * this.y2[c]) * e * e / 6\n  }; var r = function () {\n    function b(b, c, d, f) {\n      this.gl = a; this.id = a.createTexture(); this.width = b; this.height = c; this.format = d; this.type = f; a.bindTexture(a.TEXTURE_2D, this.id); a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.LINEAR); a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR); a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE); a.texParameteri(a.TEXTURE_2D,\n        a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE); b && c && a.texImage2D(a.TEXTURE_2D, 0, this.format, b, c, 0, this.format, this.type, null)\n    } function d(a) { null == c && (c = document.createElement(\"canvas\")); c.width = a.width; c.height = a.height; a = c.getContext(\"2d\"); a.clearRect(0, 0, c.width, c.height); return a } b.fromElement = function (c) { var d = new b(0, 0, a.RGBA, a.UNSIGNED_BYTE); d.loadContentsOf(c); return d }; b.prototype.loadContentsOf = function (b) {\n      this.width = b.width || b.videoWidth; this.height = b.height || b.videoHeight; a.bindTexture(a.TEXTURE_2D,\n        this.id); a.texImage2D(a.TEXTURE_2D, 0, this.format, this.format, this.type, b)\n    }; b.prototype.initFromBytes = function (b, c, d) { this.width = b; this.height = c; this.format = a.RGBA; this.type = a.UNSIGNED_BYTE; a.bindTexture(a.TEXTURE_2D, this.id); a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, b, c, 0, a.RGBA, this.type, new Uint8Array(d)) }; b.prototype.destroy = function () { a.deleteTexture(this.id); this.id = null }; b.prototype.use = function (b) { a.activeTexture(a.TEXTURE0 + (b || 0)); a.bindTexture(a.TEXTURE_2D, this.id) }; b.prototype.unuse = function (b) {\n      a.activeTexture(a.TEXTURE0 +\n        (b || 0)); a.bindTexture(a.TEXTURE_2D, null)\n    }; b.prototype.ensureFormat = function (b, c, d, f) { if (1 == arguments.length) { var h = arguments[0]; b = h.width; c = h.height; d = h.format; f = h.type } if (b != this.width || c != this.height || d != this.format || f != this.type) this.width = b, this.height = c, this.format = d, this.type = f, a.bindTexture(a.TEXTURE_2D, this.id), a.texImage2D(a.TEXTURE_2D, 0, this.format, b, c, 0, this.format, this.type, null) }; b.prototype.drawTo = function (b) {\n      a.framebuffer = a.framebuffer || a.createFramebuffer(); a.bindFramebuffer(a.FRAMEBUFFER,\n        a.framebuffer); a.framebufferTexture2D(a.FRAMEBUFFER, a.COLOR_ATTACHMENT0, a.TEXTURE_2D, this.id, 0); if (a.checkFramebufferStatus(a.FRAMEBUFFER) !== a.FRAMEBUFFER_COMPLETE) throw Error(\"incomplete framebuffer\"); a.viewport(0, 0, this.width, this.height); b(); a.bindFramebuffer(a.FRAMEBUFFER, null)\n    }; var c = null; b.prototype.fillUsingCanvas = function (b) { b(d(this)); this.format = a.RGBA; this.type = a.UNSIGNED_BYTE; a.bindTexture(a.TEXTURE_2D, this.id); a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, c); return this };\n    b.prototype.toImage = function (b) { this.use(); h.getDefaultShader().drawRect(); var f = 4 * this.width * this.height, k = new Uint8Array(f), n = d(this), p = n.createImageData(this.width, this.height); a.readPixels(0, 0, this.width, this.height, a.RGBA, a.UNSIGNED_BYTE, k); for (var m = 0; m < f; m++)p.data[m] = k[m]; n.putImageData(p, 0, 0); b.src = c.toDataURL() }; b.prototype.swapWith = function (a) {\n      var b; b = a.id; a.id = this.id; this.id = b; b = a.width; a.width = this.width; this.width = b; b = a.height; a.height = this.height; this.height = b; b = a.format; a.format =\n        this.format; this.format = b\n    }; return b\n  }(), s = \"float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}\";\n  v.gl = a;\n  v.simpleShader = f;\n  v.wrap = k;\n  v.Shader = h;\n  return v\n}();\nmodule.exports = fx;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./web_modules/glfx/index.js\n// module id = 0\n// module chunks = 0","// scrolltext\n//  demo program of LocatePrint (https://github.com/abagames/LocatePrint)\n\nimport * as lp from '../locate-print/index';\n\nvar ticks = 0;\n\nwindow.onload = () => {\n\t// initialize LocatePrint\n\tlp.init();\n\t// update the display in each frame\n\tupdate();\n}\n\nfunction update() {\n\trequestAnimationFrame(update);\n\t// set a color of a text\n\t//  0: black, 1: red, 2: blue 3: green\n\t//  4: yellow, 5: magenta, 6: cyan, 7: white\n\tlp.color(ticks % 8);\n\t// print a text\n\tlp.print('Abc', lp.scrollAtLastChar);\n\t// set a foreground color and a background color\n\tlp.color(0, ticks % 8);\n\tlp.print('Def', lp.scrollAtLastChar);\n\t// 'update' should be called in each frame\n\tlp.update();\n\tticks++;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/samples/scrolltext.ts","// LocatePrint (https://github.com/abagames/LocatePrint)\n//  display a console of an old home computer\n\nimport * as fx from 'glfx';\nimport colorShift from './shaders/colorshift';\nimport scanlines from './shaders/scanlines';\n\nexport const scrollNone = 0;\nexport const scrollAtLastChar = 1;\nexport const scrollAtLastLine = 2;\nexport let fxCanvas: any;\nexport let canvas: HTMLCanvasElement;\nexport let consoleWidth: number;\nexport let consoleHeight: number;\nexport let cursorX = 0;\nexport let cursorY = 0;\nlet context: CanvasRenderingContext2D;\nlet colorPalettes: string[];\nlet fontName: string;\nlet texture: any;\nlet ticks = 0;\nlet texts: string[][];\nlet colors: number[][];\nlet backgroundColors: number[][];\nlet currentColor: number;\nlet currentBackgroundColor: number;\nlet textAreaPaddingX: number;\nlet textAreaPaddingY: number;\nlet textWidth: number;\nlet textHeight: number;\n\nexport function init() {\n\tfxCanvas = fx.canvas();\n\tfxCanvas.colorShift = fx.wrap(colorShift);\n\tfxCanvas.scanlines = fx.wrap(scanlines);\n\tfxCanvas.id = 'locate-print-canvas';\n\tcanvas = document.createElement('canvas');\n\tcanvas.width = 640;\n\tcanvas.height = 480;\n\tcontext = canvas.getContext('2d');\n\ttexture = fxCanvas.texture(canvas);\n\tcolorPalettes =\n\t\t['black', 'red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'white'];\n\tfontName = 'VT323';\n\tcurrentColor = colorPalettes.length - 1;\n\tcurrentBackgroundColor = 0;\n\tconsole(40, 20);\n\tdocument.body.appendChild(fxCanvas);\n}\n\nexport function setCanvasSize(width: number, height: number) {\n\tcanvas.width = width;\n\tcanvas.height = height;\n}\n\nexport function setCanvasStyle(style: string) {\n\tfxCanvas.style = style;\n}\n\nexport function setColorPalettes(_colorPalettes: string[] = null) {\n\tcolorPalettes = _colorPalettes;\n\tcurrentColor = _colorPalettes.length - 1;\n\tcurrentBackgroundColor = 0;\n}\n\nexport function setFontName(_fontName: string) {\n\tfontName = _fontName;\n}\n\nexport function update() {\n\trenderTexts();\n\ttexture.loadContentsOf(canvas);\n\tfxCanvas.draw(texture).\n\t\tcolorShift().\n\t\tscanlines(ticks * canvas.height * 0.000005).\n\t\tbulgePinch(canvas.width / 2, canvas.height / 2,\n\t\tcanvas.width * 0.75, 0.12).\n\t\tvignette(0.25, 0.65).\n\t\tupdate();\n\tticks++;\n}\n\nexport function console(width: number, height: number) {\n\tconsoleWidth = width;\n\tconsoleHeight = height;\n\ttexts = times(width, () => times(height, () => null));\n\tcolors = times(width, () => times(height, () => 0));\n\tbackgroundColors = times(width, () => times(height, () => 0));\n\tcls();\n}\n\nexport function locate(x: number, y: number) {\n\tcursorX = clamp(Math.floor(x), 0, consoleWidth - 1);\n\tcursorY = clamp(Math.floor(y), 0, consoleHeight - 1);\n}\n\nexport function print(text: string, scrollType: number = scrollNone) {\n\tcalcTextSize();\n\tforEach(text, (c: string) => {\n\t\tif (cursorY >= consoleHeight) {\n\t\t\treturn false;\n\t\t}\n\t\ttexts[cursorX][cursorY] = c;\n\t\tcolors[cursorX][cursorY] = currentColor;\n\t\tbackgroundColors[cursorX][cursorY] =\n\t\t\tcurrentBackgroundColor;\n\t\tcursorX++;\n\t\tif (cursorX >= consoleWidth) {\n\t\t\tcursorX = 0;\n\t\t\tcursorY++;\n\t\t\tif ((scrollType !== scrollNone &&\n\t\t\t\tcursorY >= consoleHeight)) {\n\t\t\t\tscroll(0, -1);\n\t\t\t}\n\t\t}\n\t});\n\tif (scrollType === scrollAtLastLine &&\n\t\tcursorY >= consoleHeight - 1) {\n\t\tscroll(0, -1);\n\t}\n\treturn this;\n}\n\nexport function color(foreground: number, background: number = 0) {\n\tcurrentColor = foreground;\n\tcurrentBackgroundColor = background;\n}\n\nexport function cls() {\n\ttimes(consoleHeight, (y) => {\n\t\ttimes(consoleWidth, (x) => {\n\t\t\ttexts[x][y] = null;\n\t\t});\n\t});\n\tcursorX = cursorY = 0;\n}\n\nexport function scroll(offsetX: number, offsetY: number = 0) {\n\tvar w = consoleWidth;\n\tvar h = consoleHeight;\n\tvar ntexts = times(w, () => times(h, () => null));\n\tvar ncolors = times(w, () => times(h, () => 0));\n\tvar nbackgroundColors = times(w, () => times(h, () => 0));\n\ttimes(consoleHeight, (y) => {\n\t\tvar ny = y + offsetY;\n\t\tif (ny >= 0 && ny < consoleHeight) {\n\t\t\ttimes(consoleWidth, (x) => {\n\t\t\t\tvar nx = x + offsetX;\n\t\t\t\tif (nx >= 0 && nx < consoleWidth) {\n\t\t\t\t\tntexts[nx][ny] = texts[x][y];\n\t\t\t\t\tncolors[nx][ny] = colors[x][y];\n\t\t\t\t\tnbackgroundColors[nx][ny] = backgroundColors[x][y];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\ttexts = ntexts;\n\tcolors = ncolors;\n\tbackgroundColors = nbackgroundColors;\n\tcursorX = clamp(cursorX + offsetX,\n\t\t0, consoleWidth - 1);\n\tcursorY = clamp(cursorY + offsetY,\n\t\t0, consoleHeight - 1);\n}\n\nexport function screen(x: number, y: number): string {\n\tif (x < 0 || x >= consoleWidth || y < 0 || y >= consoleHeight) {\n\t\treturn null;\n\t}\n\treturn texts[x][y];\n}\n\nfunction calcTextSize() {\n\ttextAreaPaddingX = canvas.width * 0.05;\n\ttextAreaPaddingY = canvas.height * 0.05;\n\ttextWidth =\n\t\t(canvas.width - textAreaPaddingX * 2) / consoleWidth;\n\ttextHeight =\n\t\t(canvas.height - textAreaPaddingY * 2) / consoleHeight;\n\tcontext.font =\n\t\tMath.floor(textHeight * 1.3) + 'px ' + fontName;\n\tcontext.textAlign = 'center';\n\tcontext.textBaseline = 'middle';\n}\n\nfunction renderTexts() {\n\tcalcTextSize();\n\tcontext.fillStyle = colorPalettes[0];\n\tcontext.fillRect(textAreaPaddingX, textAreaPaddingY * 0.9,\n\t\tcanvas.width - textAreaPaddingX * 2,\n\t\tcanvas.height - textAreaPaddingY * 2 * 0.9);\n\ttimes(consoleHeight, (y) => {\n\t\ttimes(consoleWidth, (x) => {\n\t\t\tdrawChar(x, y);\n\t\t});\n\t});\n}\n\nfunction drawChar(x: number, y: number) {\n\tvar c = texts[x][y];\n\tif (!c) {\n\t\treturn;\n\t}\n\tvar px = (x + 0.5) * textWidth + textAreaPaddingX;\n\tvar py = (y + 0.5) * textHeight + textAreaPaddingY;\n\tvar bClr = backgroundColors[x][y];\n\tif (bClr > 0) {\n\t\tcontext.fillStyle = colorPalettes[bClr];\n\t\tcontext.fillRect\n\t\t\t(px - textWidth / 2, py - textHeight / 2,\n\t\t\ttextWidth, textHeight);\n\t}\n\tif (c !== ' ') {\n\t\tvar clr = colors[x][y];\n\t\tcontext.fillStyle = colorPalettes[clr];\n\t\tcontext.fillText(c, px, py);\n\t}\n}\n\nfunction clamp(v: number, min: number, max: number) {\n\tif (v < min) {\n\t\treturn min;\n\t} else if (v > max) {\n\t\treturn max;\n\t} else {\n\t\treturn v;\n\t}\n}\n\nfunction times(n: number, func: Function) {\n\tlet result = [];\n\tfor (let i = 0; i < n; i++) {\n\t\tresult.push(func(i));\n\t}\n\treturn result;\n}\n\nfunction forEach(array: any[] | string, func: Function) {\n\tlet result = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tresult.push(func(array[i]));\n\t}\n\treturn result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/locate-print/index.ts","import * as fx from 'glfx';\n\nexport default function colorShift() {\n\tvar shader = new fx.Shader(null, '\\\n\t\tuniform sampler2D texture;\\\n\t\tuniform float texSizeX;\\\n\t\tvarying vec2 texCoord;\\\n\t\t\\\n\t\tvoid main() {\\\n\t\t\tvec2 ofs = vec2(2.0 / texSizeX, 0.0);\\\n\t\t\tvec4 pl = texture2D(texture, texCoord - ofs);\\\n\t\t\tvec4 pc = texture2D(texture, texCoord);\\\n\t\t\tvec4 pr = texture2D(texture, texCoord + ofs);\\\n\t\t\tgl_FragColor = vec4(pl.r, pc.g, pr.b, pc.a);\\\n\t\t}\\\n\t');\n\tfx.simpleShader.call(this, shader, {\n\t\ttexSizeX: this.width\n\t});\n\treturn this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/locate-print/shaders/colorshift.ts","import * as fx from 'glfx';\n\nexport default function scanlines(offset) {\n\tvar shader = new fx.Shader(null, '\\\n\t\tuniform sampler2D texture;\\\n\t\tuniform float texSizeY;\\\n\t\tuniform float offset;\\\n\t\tvarying vec2 texCoord;\\\n\t\t\\\n\t\tvoid main() {\\\n\t\t\tvec4 p = texture2D(texture, texCoord);\\\n\t\t\tfloat br = clamp(sin((texCoord.y + offset) / texSizeY * 50000.0) *\\\n\t\t\t\t0.1 + 1.0, 0.0, 1.0);\\\n\t\t\tp.rgb *= br;\\\n\t\t\tgl_FragColor = p;\\\n\t\t}\\\n\t');\n\tfx.simpleShader.call(this, shader, {\n\t\ttexSizeY: this.height,\n\t\toffset: offset\n\t});\n\treturn this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/locate-print/shaders/scanlines.ts"],"sourceRoot":""}